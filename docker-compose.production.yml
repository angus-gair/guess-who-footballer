version: '3.8'

services:
  frontend:
    image: nginx:1.23-alpine
    container_name: footballer-frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./config/certificates:/etc/nginx/certificates
      - frontend-logs:/var/log/nginx
    depends_on:
      - backend
    networks:
      - footballer-network
    environment:
      - NGINX_HOST=who.gair.com.au
      - NGINX_PORT=80
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  backend:
    image: node:18-alpine
    container_name: footballer-backend
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./backend:/app
      - backend-logs:/app/logs
    depends_on:
      - db
      - redis
    command: >
      sh -c "node dist/index.js"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@db:5432/football_guess_who
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ACCESS_EXPIRES_IN=15m
      - JWT_REFRESH_EXPIRES_IN=7d
      - CORS_ORIGIN=https://who.gair.com.au
      - LOG_LEVEL=info
    networks:
      - footballer-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  db:
    image: postgres:14-alpine
    container_name: footballer-db
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./config/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./backups:/backups
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=football_guess_who
    networks:
      - footballer-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine
    container_name: footballer-redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - footballer-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  test-runner:
    image: node:18-alpine
    container_name: footballer-test-runner
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./test-runner:/app
    depends_on:
      - backend
    command: >
      sh -c "node dist/index.js"
    environment:
      - NODE_ENV=production
      - PORT=8080
      - BACKEND_URL=http://backend:3000
      - AUTH_USERNAME=${TEST_AUTH_USERNAME:-test}
      - AUTH_PASSWORD=${TEST_AUTH_PASSWORD:-test}
    networks:
      - footballer-network

  prometheus:
    image: prom/prometheus:v2.38.0
    container_name: footballer-prometheus
    restart: unless-stopped
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - footballer-network

  grafana:
    image: grafana/grafana:9.1.0
    container_name: footballer-grafana
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    networks:
      - footballer-network

volumes:
  postgres-data:
  redis-data:
  frontend-logs:
  backend-logs:
  prometheus-data:
  grafana-data:

networks:
  footballer-network:
    driver: bridge 